// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id          Int      @id @default(autoincrement())
  koreanName  String   @map("korean_name") @db.VarChar(45)
  englishName String   @map("english_name") @db.VarChar(45)
  createdAt   DateTime @default(now()) @map("created_at")

  project Project[]

  @@map("categories")
}

model Project {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(100)
  openDate       DateTime @map("open_date")
  endDate        DateTime @map("end_date")
  achievedAmount Decimal  @map("achieved_amount") @db.Decimal(11, 2)
  goalAmount     Decimal  @map("goal_amount") @db.Decimal(11, 2)
  paymentDate    DateTime @map("payment_date")
  summary        String   @db.VarChar(300)
  description    String   @db.MediumText
  categoryId     Int      @map("category_id")
  creatorId      Int      @map("creator_id")
  createdAt      DateTime @default(now()) @map("created_at")

  categories Category @relation(fields: [categoryId], references: [id])
  creators   Creator  @relation(fields: [creatorId], references: [id])

  images  Image[]
  likes   Like[]
  options Option[]

  @@map("projects")
}

model Image {
  id                  Int      @id @default(autoincrement())
  projectThumbnailUrl String   @map("project_thumbnail_url") @db.VarChar(2000)
  detailImageUrl      String   @map("detail_image_url") @db.VarChar(2000)
  projectId           Int      @map("project_id")
  createdAt           DateTime @default(now()) @map("created_at")

  projects Project @relation(fields: [projectId], references: [id])

  @@map("images")
}

model User {
  id               Int      @id @default(autoincrement())
  nickname         String   @db.VarChar(45)
  email            String   @unique @db.VarChar(200)
  password         String   @db.VarChar(80)
  profileImageUrl  String?  @map("profile_image_url") @db.VarChar(2000)
  userIntroduction String?  @map("user_introduction") @db.VarChar(1000)
  socialPlatform   String?  @map("social_platform") @db.VarChar(45)
  createdAt        DateTime @default(now()) @map("created_at")

  likes    Like[]
  creators Creator[]
  pledges  Pledge[]

  @@map("users")
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int?     @map("user_id")
  projectId Int?     @map("project_id")
  createdAt DateTime @default(now()) @map("created_at")

  projects Project? @relation(fields: [projectId], references: [id])
  users    User?    @relation(fields: [userId], references: [id])

  @@map("likes")
}

model Option {
  id           Int      @id @default(autoincrement())
  optionName   String   @map("option_name") @db.VarChar(500)
  optionDetail String   @map("option_detail") @db.VarChar(1000)
  price        Decimal  @db.Decimal(9, 2)
  projectId    Int      @map("project_id")
  createdAt    DateTime @default(now()) @map("created_at")

  projects Project  @relation(fields: [projectId], references: [id])
  pledges  Pledge[]

  @@map("options")
}

model Creator {
  id            Int      @id @default(autoincrement())
  userId        Int      @map("user_id")
  accountNumber String   @map("account_number") @db.VarChar(45)
  createdAt     DateTime @default(now()) @map("created_at")

  users    User      @relation(fields: [userId], references: [id])
  projects Project[]

  @@map("creators")
}

model Pledge {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  optionId  Int      @map("option_id")
  createdAt DateTime @default(now()) @map("created_at")

  users   User   @relation(fields: [userId], references: [id])
  options Option @relation(fields: [optionId], references: [id])

  @@map("pledges")
}
